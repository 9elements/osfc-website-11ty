<div class="schedule" style="
  grid-template-columns: var(--schedule-first-column, 4ch) repeat({{ schedule.rooms.length }}, 1fr);
  grid-template-rows:
    [head] auto
    {% for i in range(0, hourCount + 1) %}
      {% set currentHour = i + firstHour | int %}
      {% if currentHour > 23 %}
        {% set currentHour = currentHour - 24 %}
      {% endif %}
      {% for j in range(0, 12) %}
        [slice-{{ helpers.trailingZeroes(currentHour, 2) }}-{{ helpers.trailingZeroes(loop.index0 * 5, 2) }}] minmax(10px, auto)
      {% endfor %}
    {% endfor %}
    ;">

  {# Day to upper left Cell #}
  <div class="bg-white text-dark-gray" style="
    grid-row-start: head;
    padding: 0.5rem;
    position: sticky;
    top: 0;
    grid-column: 1 / -1;
    z-index: 2;
    margin-bottom: 0.5rem;"></div>

  {# Set Hours & Divider #}
  {% for i in range(0, hourCount + 1) %}
    {% set currentHour = i + firstHour | int %}
    {% if currentHour > 23 %}
      {% set currentHour = currentHour - 24 %}
    {% endif %}

    {# Hours #}
    <div class="schedule__hour | text-300 md:text-400" style="
        grid-row-start: slice-{{ helpers.trailingZeroes(currentHour, 2) }}-00;
        " aria-hidden="true">
      {{ helpers.trailingZeroes(currentHour, 2) }}:00
    </div>

    {# Divider #}
    <div class="schedule__divider" style="
        grid-row-start: slice-{{ helpers.trailingZeroes(currentHour, 2) }}-00;
        " aria-hidden="true"></div>
  {% endfor %}

  {% for room in schedule.rooms %}
    {# Save the index, because we don't have access to this in nested loops #}
    {% set roomCount = loop.index %}

    {# Set Room as Headline #}
    <div class="schedule__room | bg-white text-dark-gray weight-black uppercase md:text-500 leading-tight" style="
        grid-column: {{ roomCount + 1 }};">
      {{room.name}}
    </div>

    {% if day.rooms[room.name] %}
      {# Insert Talks #}
      {% for talk in day.rooms[room.name] %}
        {% set talkHour = talk
          .start
          .slice(0, 2) %}
        {% set talkMinute = talk
          .start
          .slice(3, 5) %}
        {% set fiveCount = (talk.duration.slice(0, 2) * 12) + (talk.duration.slice(3, 5) / 5) %}
        <article class="schedule__event grid-event" style="
                  grid-row-start: slice-{{ helpers.trailingZeroes(talkHour, 2) }}-{{ helpers.trailingZeroes(talkMinute, 2) }};
                  grid-row-end: span {{fiveCount}};
                  grid-column: {{ roomCount + 1 }};
                  ">
          <div class="grid-event__body | stack-100 | leading-tight">
            <h3 class="weight-bold text-300 md:text-400">
              {{talk.title}}
            </h3>
            <p class="grid-event__subline | text-300">
              {% for person in talk.persons %}
                {% if loop.first %}
                  {{ person.public_name }}
                {% else %}
                  , {{ person.public_name }}
                {% endif %}
              {% endfor %}
            </p>
          </div>
          <div class="grid-event__time | bg-violet leading-tight">
            <span class="weight-bold text-300 md:text-400">{{talk.start}}</span>
            <span class="text-300">{{ (talk.duration.slice(0,2)|int * 60) + (talk.duration.slice(3, 5)|int) }}min</span>
          </div>
          {# Only add link, if there is an abstract #}
          {% if talk.abstract or talk.description.length > 30 %}
            <a class="grid-event__link" href="/{{ year }}/talks/{{ talk.title | slugify }}">
              <span class="sr-only">Talk details: {{talk.title}}</span>
            </a>
          {% endif %}
        </article>
      {% endfor %}
      {% if breaks %}
        {% set currentBreaks = helpers.MatchingDayAndRoom(breaks, day.date, room.name) %}

        {# Do this only if breaks are defined this year #}
        {% for break in currentBreaks %}
          {% set breakHour = break
            .start
            .slice(11, 13) %}
          {% set breakMinute = break
            .start
            .slice(14, 16) %}
          {% set fiveCount = helpers.getFiveCount(break.start, break.end) %}
          <article class="grid-event grid-event--break" style="
            grid-row-start: slice-{{ helpers.trailingZeroes(breakHour, 2) }}-{{ breakMinute }};
            grid-row-end: span {{fiveCount}};
            grid-column: {{ roomCount + 1 }};
            ">
            <div class="grid-event__body | stack-100 | leading-tight">
              <h3 class="weight-bold text-300 md:text-400">
                {{ break.description.en }}
              </h3>
            </div>
            <div class="grid-event__time | bg-violet leading-tight">
              <span class="weight-bold text-300 md:text-400">{{ breakHour }}:{{ breakMinute }}</span>
            </div>
          </article>
        {% endfor %}
      {% endif %}
    {% endif %}
  {% endfor %}
</div>